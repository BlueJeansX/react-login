{"version":3,"sources":["components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","_ref","Login","error","_useState","useState","name","email","password","_useState2","Object","slicedToArray","details","setDetails","react_default","a","createElement","onSubmit","e","preventDefault","className","class","type","id","onChange","objectSpread","target","value","App","adminUser","user","setUser","_useState3","_useState4","setError","onClick","console","log","components_LoginForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2f1363ff.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction LoginForm({ Login, error }) {\r\n    //detalji sa forme koji će se provjeravati za ispravnost:\r\n    const [details, setDetails] = useState({ name: \"\", email: \"\", password: \"\" });\r\n\r\n    //ovo hendla submit sa forme:\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        Login(details);\r\n    }\r\n    //DOM stablo:\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-inner\">\r\n                <h2>React - Login forma</h2>\r\n                <h3>Za uspješno logiranje koristi 'test@test.hr' i 'password'</h3>\r\n                {(error !== \"\") ? (<div>{error}</div>) : \"\"}\r\n                <div class=\"form-group\">\r\n                    <label>Ime:</label>\r\n                    <input type=\"text\" name=\"name\" id=\"name\" onChange={e => setDetails({ ...details, name: e.target.value })} value={details.name}></input>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Email:</label>\r\n                    <input type=\"text\" name=\"email\" id=\"email\" onChange={e => setDetails({ ...details, email: e.target.value })} value={details.email}></input>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setDetails({ ...details, password: e.target.value })} value={details.password}></input>\r\n                </div>\r\n                <input type=\"submit\" value=\"LOGIN\"></input>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from \"react\";\nimport LoginForm from \"./components/LoginForm\";\n\n\nfunction App() {\n\n  //harkodirani admin user podaci, u realnom svijetu ovo je u bazi:\n  const adminUser = {\n    email: \"test@test.hr\",\n    password: \"password\"\n  }\n\n\n  //ovdje spremi usera:\n  const [user, setUser] = useState({ name: \"\", email: \"\" });\n  //ako su krivi login podaci pripremi funkciju za ispis greške:\n  const [error, setError] = useState(\"\");\n\n  //login funkcija koja se poziva kod login pokušaja:\n  const Login = details => {\n\n    console.log(details);\n    if (details.email === adminUser.email && details.password === adminUser.password) {\n      console.log(\"Uspješno si logiran!\");\n      setUser({\n        name: details.name,\n        email: details.email\n      });\n    } else {\n      console.log(\"Nisi upisao ispravne login podatke!\");\n      setError(\"Nisi upisao ispravne login podatke!\");\n    }\n  }\n\n  const Logout = () => {\n    console.log(\"Logout\");\n    setUser({ name: \"\", email: \"\" });\n  }\n\n  //ako se koriste ispravni login podaci ispiši poruku sa unesenim imenom:\n  return (\n    <div className=\"App\">\n      {(user.email !== \"\") ? (\n        <div class=\"welcome\">\n          <h2>Uspješno si logiran, <span>{user.name}</span></h2>\n          <button onClick={Logout}>LOGOUT</button>\n        </div>\n      ) : (\n        <LoginForm Login={Login} error={error} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}